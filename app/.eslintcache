[{"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\index.js":"1","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\ControlPanelElements.js":"2","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\SidebarElements.js":"3","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\index.js":"4","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\ContentElements.js":"5","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\index.js":"6","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\App.jsx":"7","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\configureStore.js":"8","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Navbar\\NavbarElements.js":"9","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Navbar\\index.js":"10","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\users.js":"11","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\index.js":"12"},{"size":363,"mtime":1609764458221,"results":"13","hashOfConfig":"14"},{"size":2826,"mtime":1609721846417,"results":"15","hashOfConfig":"14"},{"size":1903,"mtime":1607686165155,"results":"16","hashOfConfig":"14"},{"size":10763,"mtime":1610487342118,"results":"17","hashOfConfig":"14"},{"size":1013,"mtime":1608042312776,"results":"18","hashOfConfig":"14"},{"size":7291,"mtime":1610370652376,"results":"19","hashOfConfig":"14"},{"size":4802,"mtime":1610403611503,"results":"20","hashOfConfig":"14"},{"size":169,"mtime":1609763730804,"results":"21","hashOfConfig":"14"},{"size":2576,"mtime":1608847063453,"results":"22","hashOfConfig":"14"},{"size":1160,"mtime":1610366393992,"results":"23","hashOfConfig":"14"},{"size":723,"mtime":1609933492204,"results":"24","hashOfConfig":"14"},{"size":719,"mtime":1609720098135,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1nif9a4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\index.js",[],["56","57"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\ControlPanelElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\index.js",["58","59","60"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\ContentElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\index.js",["61","62","63","64","65"],"import React, { useEffect, useState } from 'react'\r\nimport { projectsData } from '../ControlPanelSection';\r\n// import { projectsData } from '../ControlPanelSection';\r\nimport { ContentListItem, ListEditIcon, ListDate, ListPersonName, ListTime } from './ContentElements';\r\nimport { connect } from 'react-redux';\r\nimport { getProjectArray, projectAdded } from '../../Store/slices/projects';\r\nimport { getUsersArray } from '../../Store/slices/users';\r\nimport { getTimecardArray } from '../../Store/slices/timecards';\r\n\r\nconst ContentSection = (\r\n\t{\r\n\t\tprojectId,\r\n\t\tsetTotalTime,\r\n\t\tsetCardCount,\r\n\t\tselectedMonth,\r\n\t\tselectedContractor,\r\n\t\tcurrentModeIndex,\r\n\t\tdispatch,\r\n\t\tprojects,\r\n\t\ttimeCards,\r\n\t\tusers\r\n\t}\r\n) => {\r\n\r\n\tconst [{ savedTime }, setSavedTime] = useState({ savedTime: 0 })\r\n\t// const [{ cardCount }, setCardCount] = useState({ cardCount: 0 })\r\n\tconst firstMode = currentModeIndex === 0; // Project hours\r\n\tconst secondMode = currentModeIndex === 1; // Contractor hours\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTotalTime({ totalTime: savedTime })\r\n\t}, [savedTime, projectId, setTotalTime, selectedMonth, currentModeIndex, selectedContractor])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSavedTime({ savedTime: calcTime() });\r\n\t\ttimeWorked();\r\n\t}, [projectId, currentModeIndex, selectedContractor, selectedMonth])\r\n\r\n\r\n\tconst hours = time => Math.floor(time);\r\n\tconst minutes = time => ((time - hours(time)) * 60).toPrecision(2) / 1;\r\n\tconst colorAlternator = id => id % 2 === 0 ? '0.1' : '0.2';\r\n\tconst listColor = id => (`rgb(0 0 0 / ${colorAlternator(id)})`);\r\n\tconst timeFormat = time => (`${hours(time)}h ${minutes(time)}min`);\r\n\r\n\tfunction timeWorked() {\r\n\t\tlet totalTime = [0];\r\n\t\tlet cardsCounted = 0;\r\n\r\n\t\tconst projectTime = timeCards\r\n\t\t\t.filter(card => card.jobDate.split('.')[1] - 1 === selectedMonth)\r\n\t\t\t.filter(c => c.projectId === projectId)\r\n\t\t\t.map((card, index) => {\r\n\t\t\t\tconst timeWorked = card.hours;\r\n\r\n\t\t\t\tif (firstMode) {\r\n\t\t\t\t\tcardsCounted = index + 1;\r\n\t\t\t\t\ttotalTime.push(timeWorked);\r\n\t\t\t\t}\r\n\t\t\t\treturn totalTime;\r\n\t\t\t})[0] || [0]\r\n\r\n\t\tconst contractorTime = timeCards\r\n\t\t\t.filter(card => card.jobDate.split('.')[1] - 1 === selectedMonth)\r\n\t\t\t.filter(card => users.find(user => user.id === card.userId).name === selectedContractor)\r\n\t\t\t.map((card, index) => {\r\n\t\t\t\tconst timeWorked = card.hours;\r\n\r\n\t\t\t\tif (secondMode) {\r\n\t\t\t\t\tcardsCounted = index + 1;\r\n\t\t\t\t\ttotalTime.push(timeWorked);\r\n\t\t\t\t}\r\n\t\t\t\treturn totalTime;\r\n\t\t\t})[0] || [0]\r\n\r\n\t\tif (secondMode) setCardCount({ cardCount: totalTime.length - 1 });\r\n\t\tif (firstMode) setCardCount({ cardCount: cardsCounted });\r\n\r\n\t\treturn totalTime;\r\n\t};\r\n\r\n\tfunction calcTime() { return timeWorked().reduce((acc, curr) => acc + curr) }\r\n\r\n\r\n\r\n\tfunction renderList() {\r\n\t\tconst projectCards = timeCards\r\n\t\t\t.filter(card => card.jobDate.split('.')[1] - 1 === selectedMonth)\r\n\t\t\t.filter(c => c.projectId === projectId)\r\n\t\t\t.map((card, index) => {\r\n\t\t\t\tconst calculatedTime = card.hours;\r\n\t\t\t\tconst contractorsName = users.find(user => user.id === card.userId).name;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ContentListItem key={card.id} listColor={listColor(index)}>\r\n\t\t\t\t\t\t<ListEditIcon />\r\n\t\t\t\t\t\t<ListDate>{card.jobDate}</ListDate>\r\n\t\t\t\t\t\t<ListPersonName>{contractorsName}</ListPersonName>\r\n\t\t\t\t\t\t<ListTime>{timeFormat(calculatedTime)}</ListTime>\r\n\t\t\t\t\t</ContentListItem>\r\n\t\t\t\t)\r\n\t\t\t});\r\n\r\n\t\tconst contractorCards = timeCards\r\n\t\t\t.filter(card => card.jobDate.split('.')[1] - 1 === selectedMonth)\r\n\t\t\t.filter(card => users.find(user => user.id === card.userId).name === selectedContractor)\r\n\t\t\t.map((card, index) => {\r\n\t\t\t\tconst projectName = projects.find(project => project.id === card.projectId).address;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ContentListItem key={card.projectId} listColor={listColor(index)}>\r\n\t\t\t\t\t\t<ListEditIcon />\r\n\t\t\t\t\t\t<ListDate>{card.jobDate}</ListDate>\r\n\t\t\t\t\t\t<ListPersonName>{projectName}</ListPersonName>\r\n\t\t\t\t\t\t<ListTime>{timeFormat(card.hours)}</ListTime>\r\n\t\t\t\t\t</ContentListItem>\r\n\t\t\t\t)\r\n\t\t\t});\r\n\r\n\t\tif (firstMode) return projectCards;\r\n\t\tif (secondMode) return contractorCards;\r\n\t}\r\n\r\n\r\n\r\n\treturn (<>{renderList()}</>)\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n({\r\n\tprojects: getProjectArray(state),\r\n\tusers: getUsersArray(state),\r\n\ttimeCards: getTimecardArray(state)\r\n})\r\n\r\n\r\n// mapStateToProps takes state of the store and returns the part you are interested in:\r\n// the properties of this object will end up as props of our componennt\r\nexport default connect(mapStateToProps)(ContentSection);\r\n\r\n\r\n// export const cardsData = [\r\n// \t{\r\n// \t\tid: 1,\r\n// \t\tdate: '22.09.2020',\r\n// \t\tname: 'Egils Zariņš',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 1,\r\n// \t\t\t\ttimeWorked: 14.5\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 9.1\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 3,\r\n// \t\t\t\ttimeWorked: 2.3\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 4,\r\n// \t\t\t\ttimeWorked: 5\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 2,\r\n// \t\tdate: '25.12.2020',\r\n// \t\tname: 'Dainis Vītols',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 1,\r\n// \t\t\t\ttimeWorked: 14.8\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 15.4\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 3,\r\n// \t\tdate: '30.09.2020',\r\n// \t\tname: 'Jānis Paugurs',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 6,\r\n// \t\t\t\ttimeWorked: 21.2\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 11.4\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 4,\r\n// \t\tdate: '25.09.2020',\r\n// \t\tname: 'Pēteris Siliņš',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 7,\r\n// \t\t\t\ttimeWorked: 3.7\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 17.8\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 5,\r\n// \t\tdate: '22.12.2020',\r\n// \t\tname: 'Artūrs Laksts',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 7,\r\n// \t\t\t\ttimeWorked: 24.1\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 6,\r\n// \t\tdate: '25.09.2020',\r\n// \t\tname: 'Matīss Rītiņš',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 4,\r\n// \t\t\t\ttimeWorked: 6.1\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 3,\r\n// \t\t\t\ttimeWorked: 9.3\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 8,\r\n// \t\t\t\ttimeWorked: 22.1\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 7,\r\n// \t\tdate: '25.09.2020',\r\n// \t\tname: 'Kaspars Zuksis',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 5,\r\n// \t\t\t\ttimeWorked: 14.8\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 15.4\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 8,\r\n// \t\tdate: '30.09.2020',\r\n// \t\tname: 'Raitis Zauss',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 6,\r\n// \t\t\t\ttimeWorked: 21.2\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 11.4\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 9,\r\n// \t\tdate: '25.12.2020',\r\n// \t\tname: 'Edgars Koksis',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 7,\r\n// \t\t\t\ttimeWorked: 3.7\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 2,\r\n// \t\t\t\ttimeWorked: 17.8\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 10,\r\n// \t\tdate: '22.09.2020',\r\n// \t\tname: 'Kristaps Egle',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 7,\r\n// \t\t\t\ttimeWorked: 24.1\r\n// \t\t\t}\r\n// \t\t]\r\n// \t},\r\n// \t{\r\n// \t\tid: 11,\r\n// \t\tdate: '25.09.2020',\r\n// \t\tname: 'Reinis Feinis',\r\n// \t\tworkingData: [\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 4,\r\n// \t\t\t\ttimeWorked: 6.1\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 3,\r\n// \t\t\t\ttimeWorked: 9.3\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\tprojectId: 8,\r\n// \t\t\t\ttimeWorked: 22.1\r\n// \t\t\t}\r\n// \t\t]\r\n// \t}\r\n// ];","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\App.jsx",["66"],"import React, { useEffect } from 'react'\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport GlobalFonts from './fonts/fonts';\nimport Home from './pages/index';\nimport { connect } from 'react-redux';\nimport { projectAdded, getProjectArray } from './Store/slices/projects';\nimport { userAdded, getUsersArray } from './Store/slices/users';\nimport { getTimecardArray, timecardAdded } from './Store/slices/timecards';\n\nfunction App({ dispatch }) {\n\n\n\tuseEffect(() => {\n\t\tdispatch(projectAdded({ name: 'Elvi', address: 'Kirkevej 28' }));// 1\n\t\tdispatch(projectAdded({ name: 'Danske Bank', address: 'Gråbrødrestræde 10' }));// 2\n\t\tdispatch(projectAdded({ name: 'Lidl', address: 'Klosterstræde 76' }));// 3\n\t\tdispatch(projectAdded({ name: 'Peter Nielsen', address: 'Lille Kannikestræde 32' }));// 4\n\t\tdispatch(projectAdded({ name: 'Oskar Jensen', address: 'Vestergade 145' }));// 5\n\t\tdispatch(projectAdded({ name: 'David Petersen', address: 'Nytorv 53' }));// 6\n\t\tdispatch(projectAdded({ name: 'Jesper Nassar', address: 'Skindergade 111' }));// 7\n\t\tdispatch(projectAdded({ name: 'Mc Donalds', address: 'Vognmagergade 27' }));// 8\n\t\tdispatch(projectAdded({ name: 'David Petersencc', address: 'Nytorv 5333' }));// 9\n\t\tdispatch(projectAdded({ name: 'Jesper Nassarrrr', address: 'Skindergade 114441' }));// 10\n\t\tdispatch(projectAdded({ name: 'Mc Donaldsddd', address: 'Vognmagergade 22227' }));// 11\n\n\t\tdispatch(userAdded({ name: 'Egils Zariņš' })); // 1\n\t\tdispatch(userAdded({ name: 'Dainis Vītols' })); // 2\n\t\tdispatch(userAdded({ name: 'Jānis Paugurs' })); // 3\n\t\tdispatch(userAdded({ name: 'Pēteris Siliņš' })); // 4\n\t\tdispatch(userAdded({ name: 'Artūrs Laksts' })); // 5\n\t\tdispatch(userAdded({ name: 'Matīss Rītiņš' })); // 6\n\t\tdispatch(userAdded({ name: 'Kaspars Zuksis' })); // 7\n\t\tdispatch(userAdded({ name: 'Raitis Zauss' })); // 8\n\t\tdispatch(userAdded({ name: 'Edgars Koksis' })); // 9\n\t\tdispatch(userAdded({ name: 'Kristaps Egle' })); // 10\n\t\tdispatch(userAdded({ name: 'Reinis Feinis' })); // 11\n\n\t\tdispatch(timecardAdded({ userId: 1, projectId: 1, jobDate: '22.09.2020', hours: 14.5 }));\n\t\tdispatch(timecardAdded({ userId: 1, projectId: 2, jobDate: '22.09.2020', hours: 9.1 }));\n\t\tdispatch(timecardAdded({ userId: 1, projectId: 3, jobDate: '22.09.2020', hours: 2.3 }));\n\t\tdispatch(timecardAdded({ userId: 1, projectId: 4, jobDate: '22.09.2020', hours: 5 }));\n\t\tdispatch(timecardAdded({ userId: 2, projectId: 1, jobDate: '25.12.2020', hours: 14.8 }));\n\t\tdispatch(timecardAdded({ userId: 2, projectId: 2, jobDate: '25.12.2020', hours: 15.4 }));\n\t\tdispatch(timecardAdded({ userId: 3, projectId: 6, jobDate: '30.09.2020', hours: 21.2 }));\n\t\tdispatch(timecardAdded({ userId: 3, projectId: 2, jobDate: '30.09.2020', hours: 11.4 }));\n\t\tdispatch(timecardAdded({ userId: 4, projectId: 7, jobDate: '25.09.2020', hours: 3.7 }));\n\t\tdispatch(timecardAdded({ userId: 4, projectId: 2, jobDate: '25.09.2020', hours: 17.8 }));\n\t\tdispatch(timecardAdded({ userId: 5, projectId: 7, jobDate: '22.12.2020', hours: 24.1 }));\n\t\tdispatch(timecardAdded({ userId: 6, projectId: 4, jobDate: '25.09.2020', hours: 6.1 }));\n\t\tdispatch(timecardAdded({ userId: 6, projectId: 3, jobDate: '25.09.2020', hours: 9.3 }));\n\t\tdispatch(timecardAdded({ userId: 6, projectId: 8, jobDate: '25.09.2020', hours: 22.1 }));\n\t\tdispatch(timecardAdded({ userId: 7, projectId: 5, jobDate: '25.09.2020', hours: 14.8 }));\n\t\tdispatch(timecardAdded({ userId: 7, projectId: 2, jobDate: '25.09.2020', hours: 15.4 }));\n\t\tdispatch(timecardAdded({ userId: 8, projectId: 6, jobDate: '30.09.2020', hours: 21.2 }));\n\t\tdispatch(timecardAdded({ userId: 8, projectId: 2, jobDate: '30.09.2020', hours: 11.4 }));\n\t\tdispatch(timecardAdded({ userId: 9, projectId: 7, jobDate: '24.09.2020', hours: 3.7 }));\n\t\tdispatch(timecardAdded({ userId: 9, projectId: 2, jobDate: '24.09.2020', hours: 17.8 }));\n\t\tdispatch(timecardAdded({ userId: 10, projectId: 7, jobDate: '22.09.2020', hours: 24.1 }));\n\t\tdispatch(timecardAdded({ userId: 11, projectId: 4, jobDate: '25.09.2020', hours: 6.1 }));\n\t\tdispatch(timecardAdded({ userId: 11, projectId: 3, jobDate: '25.09.2020', hours: 9.3 }));\n\t\tdispatch(timecardAdded({ userId: 11, projectId: 8, jobDate: '25.09.2020', hours: 22.1 }));\n\t\tdispatch(timecardAdded({ userId: 11, projectId: 2, jobDate: '25.09.2020', hours: 100.1 })); // TODO remove - just test\n\t}, [])\n\n\treturn (\n\t\t<Router>\n\t\t\t<GlobalFonts />\n\t\t\t<Home />\n\t\t</Router>\n\t);\n}\n\n\nconst mapStateToProps = (state) =>\n({\n\tprojects: getProjectArray(state),\n\tusers: getUsersArray(state),\n\ttimecards: getTimecardArray(state)\n})\n\n\n// mapStateToProps takes state of the store and returns the part you are interested in:\n// the properties of this object will end up as props of our componennt\nexport default connect(mapStateToProps)(App);",["67","68"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\configureStore.js",["69"],"import { configureStore } from '@reduxjs/toolkit';\r\nimport reducer from './reducers/reducer';\r\n\r\n\r\nexport default function () {\r\n\treturn configureStore({ reducer });\r\n};",["70","71"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Navbar\\index.js",["72","73","74"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\users.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\index.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":52,"column":101,"nodeType":"81","endLine":52,"endColumn":115,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"83","line":53,"column":113,"nodeType":"81","endLine":53,"endColumn":130,"suggestions":"84"},{"ruleId":"79","severity":1,"message":"85","line":70,"column":5,"nodeType":"81","endLine":70,"endColumn":74,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"91","line":6,"column":27,"nodeType":"89","messageId":"90","endLine":6,"endColumn":39},{"ruleId":"79","severity":1,"message":"92","line":37,"column":5,"nodeType":"81","endLine":37,"endColumn":69,"suggestions":"93"},{"ruleId":"87","severity":1,"message":"94","line":50,"column":9,"nodeType":"89","messageId":"90","endLine":50,"endColumn":20},{"ruleId":"87","severity":1,"message":"95","line":63,"column":9,"nodeType":"89","messageId":"90","endLine":63,"endColumn":23},{"ruleId":"79","severity":1,"message":"96","line":64,"column":5,"nodeType":"81","endLine":64,"endColumn":7,"suggestions":"97"},{"ruleId":"75","replacedBy":"98"},{"ruleId":"77","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":5,"column":1,"nodeType":"102","endLine":7,"endColumn":2},{"ruleId":"75","replacedBy":"103"},{"ruleId":"77","replacedBy":"104"},{"ruleId":"87","severity":1,"message":"105","line":3,"column":44,"nodeType":"89","messageId":"90","endLine":3,"endColumn":51},{"ruleId":"87","severity":1,"message":"106","line":3,"column":62,"nodeType":"89","messageId":"90","endLine":3,"endColumn":69},{"ruleId":"87","severity":1,"message":"107","line":3,"column":71,"nodeType":"89","messageId":"90","endLine":3,"endColumn":79},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firstTimeLoadedAddress'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'firstTimeLoadedContractor'. Either include it or remove the dependency array.",["111"],"React Hook useEffect has missing dependencies: 'currentModeIndex', 'idListPerMode', and 'timecards'. Either include them or remove the dependency array.",["112"],"no-unused-vars","'projectsData' is defined but never used.","Identifier","unusedVar","'projectAdded' is defined but never used.","React Hook useEffect has missing dependencies: 'calcTime' and 'timeWorked'. Either include them or remove the dependency array.",["113"],"'projectTime' is assigned a value but never used.","'contractorTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["114"],["108"],["109"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["108"],["109"],"'NavItem' is defined but never used.","'NavMenu' is defined but never used.","'NavLinks' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [firstAddress, firstTimeLoadedAddress]",{"range":"125","text":"126"},"Update the dependencies array to be: [firstContractor, firstTimeLoadedContractor]",{"range":"127","text":"128"},"Update the dependencies array to be: [totalTime, monthIndex, currentAddress, currentContractor, cardCount, idListPerMode, currentModeIndex, timecards]",{"range":"129","text":"130"},"Update the dependencies array to be: [projectId, currentModeIndex, selectedContractor, selectedMonth, calcTime, timeWorked]",{"range":"131","text":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},[3181,3195],"[firstAddress, firstTimeLoadedAddress]",[3311,3328],"[firstContractor, firstTimeLoadedContractor]",[4040,4109],"[totalTime, monthIndex, currentAddress, currentContractor, cardCount, idListPerMode, currentModeIndex, timecards]",[1229,1293],"[projectId, currentModeIndex, selectedContractor, selectedMonth, calcTime, timeWorked]",[4359,4361],"[dispatch]"]