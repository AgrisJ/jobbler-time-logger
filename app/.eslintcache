[{"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\fonts\\fonts.js":"1","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\App.jsx":"2","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\index.js":"3","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\middleware\\api.js":"4","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\timecards.js":"5","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\index.js":"6","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\PrintContent\\index.js":"7","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Checkbox\\CheckboxElements.js":"8","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Checkbox\\index.js":"9","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\reducers\\reducer.js":"10","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\index.js":"11","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\api.js":"12","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\SelectUsers\\index.js":"13","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\SelectUsers\\SelectUsersElements.js":"14","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\users.js":"15","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\login.js":"16","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\AddDataForm\\index.js":"17","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\recordOverview.js":"18","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\addEntry.js":"19","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\index.js":"20","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\login.js":"21","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Modal\\ModalElements.js":"22","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\AddEntryForm\\index.js":"23","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\currentAddress.js":"24","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\addRemove.js":"25","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\configureStore.js":"26","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\ControlPanelElements.js":"27"},{"size":1143,"mtime":1610659255740,"results":"28","hashOfConfig":"29"},{"size":5692,"mtime":1613345700361,"results":"30","hashOfConfig":"29"},{"size":7398,"mtime":1613294705338,"results":"31","hashOfConfig":"29"},{"size":778,"mtime":1612392951677,"results":"32","hashOfConfig":"29"},{"size":2651,"mtime":1613334817311,"results":"33","hashOfConfig":"29"},{"size":5492,"mtime":1613307520059,"results":"34","hashOfConfig":"29"},{"size":7471,"mtime":1613207651490,"results":"35","hashOfConfig":"29"},{"size":1175,"mtime":1612175446852,"results":"36","hashOfConfig":"29"},{"size":593,"mtime":1612175446853,"results":"37","hashOfConfig":"29"},{"size":152,"mtime":1610659255658,"results":"38","hashOfConfig":"29"},{"size":378,"mtime":1610659255941,"results":"39","hashOfConfig":"29"},{"size":234,"mtime":1612390789400,"results":"40","hashOfConfig":"29"},{"size":5877,"mtime":1613246140522,"results":"41","hashOfConfig":"29"},{"size":164,"mtime":1612175446865,"results":"42","hashOfConfig":"29"},{"size":1223,"mtime":1613209895129,"results":"43","hashOfConfig":"29"},{"size":1081,"mtime":1613345360167,"results":"44","hashOfConfig":"29"},{"size":7576,"mtime":1613291292436,"results":"45","hashOfConfig":"29"},{"size":1435,"mtime":1613346341470,"results":"46","hashOfConfig":"29"},{"size":2227,"mtime":1613337359098,"results":"47","hashOfConfig":"29"},{"size":1961,"mtime":1613345938184,"results":"48","hashOfConfig":"29"},{"size":183,"mtime":1612871879913,"results":"49","hashOfConfig":"29"},{"size":2133,"mtime":1612175446857,"results":"50","hashOfConfig":"29"},{"size":6285,"mtime":1613334905788,"results":"51","hashOfConfig":"29"},{"size":913,"mtime":1613295055461,"results":"52","hashOfConfig":"29"},{"size":5627,"mtime":1613337330013,"results":"53","hashOfConfig":"29"},{"size":359,"mtime":1612301152433,"results":"54","hashOfConfig":"29"},{"size":2832,"mtime":1611522796953,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nif9a4",{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\fonts\\fonts.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\App.jsx",["113","114","115","116","117","118","119","120"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\index.js",["121","122","123","124","125"],"import React, { useCallback, useEffect, useState } from 'react'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport '../../Styles/dropdown.css'\r\nimport { ControlPanelContainer, ControlPanelContent, ControlPanelMonth, TotalDisplay, TotalDisplayWrapper, TotalTime, BackwardCaret, ForwardCaret, CardCounter } from './ControlPanelElements'\r\nimport { getProjectArray } from '../../Store/slices/projects';\r\nimport { connect } from 'react-redux';\r\nimport { getUsersArray } from '../../Store/slices/users';\r\nimport { getTimecardArray } from './../../Store/slices/timecards';\r\nimport { getMonthIndex, monthIndexChanged } from '../../Store/slices/monthIndex';\r\nimport { currentAddressChanged, getcurrentAddress } from '../../Store/slices/currentAddress';\r\nimport { currentContractorChanged, getcurrentContractor } from '../../Store/slices/currentContractor';\r\nimport { getcurrentModeIndex } from '../../Store/slices/currentModeIndex';\r\nimport { gettotalTime } from '../../Store/slices/totalTime';\r\nimport { getcardCount } from '../../Store/slices/cardCount';\r\nimport Checkbox from './../Checkbox/index';\r\nimport SelectUsers from '../SelectUsers';\r\nimport { isLocalStored } from './../services/helpfulFunctions';\r\nimport ModeSwitcher from '../ModeSwitcher';\r\nimport { getLoginData, loggedIn } from '../../Store/slices/login';\r\n\r\nfunction ControlPanelSection(\r\n\t{\r\n\t\tisAdmin,\r\n\t\tlogin,\r\n\t\tprojects,\r\n\t\tusers,\r\n\t\ttimecards,\r\n\t\tmonthIndex,\r\n\t\tcurrentAddress,\r\n\t\tcurrentContractor,\r\n\t\tcurrentModeIndex,\r\n\t\ttotalTime,\r\n\t\tcardCount,\r\n\t\tdispatch,\r\n\t\tsetprintAllChecked,\r\n\t\tprintAllChecked\r\n\t}\r\n) {\r\n\tconst addresses = projects.map(project => {\r\n\t\treturn { id: project.id, address: project.address, projectId: project.projectId }\r\n\t}\r\n\t);\r\n\tconst loggedInUserId = login.userId;\r\n\tconst contractors = users.map(card => ({ name: card.name, userId: card.userId }));\r\n\tconst monthNow = new Date().getMonth();\r\n\tconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\tconst IS_PRINT_MODE = ['print'].some(item => window.location.href.indexOf(item) !== -1) ? true : false;\r\n\tconst [{ listCardCount }, setListCardCount] = useState({ listCardCount: [] });\r\n\r\n\tconst listIds =\r\n\t\tuseCallback(() => idListPerMode(currentModeIndex)\r\n\t\t\t.map(id => {\r\n\r\n\t\t\t\tlet propForMode = null;\r\n\t\t\t\tif (currentModeIndex === 0) propForMode = 'projectId';\r\n\t\t\t\tif (currentModeIndex === 1) propForMode = 'userId';\r\n\r\n\t\t\t\treturn timecards\r\n\t\t\t\t\t.filter(c => isAdmin ? c : c.userId === loggedInUserId)\r\n\t\t\t\t\t.filter(card => card[propForMode] === id)\r\n\t\t\t\t\t.filter(card => card.jobDate.split('-')[1] - 1 === monthIndex).length\r\n\t\t\t}\r\n\t\t\t), [currentModeIndex, monthIndex, timecards]);\r\n\tconst firstAddress = useCallback(() => (addresses[0] ? { id: addresses[0].id, address: addresses[0].address, projectId: addresses[0].projectId, loading: false } : null), [addresses]);\r\n\tconst firstContractor = contractors[0];\r\n\tconst firstTimeLoadedAddress = firstAddress() && currentAddress.address === null;\r\n\tconst firstTimeLoadedContractor = firstContractor && !currentContractor;\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(monthIndexChanged({ monthIndex: monthNow || 0 }));\r\n\t\tisLocalStored('monthIndex') && dispatch(monthIndexChanged({ monthIndex: +isLocalStored('monthIndex') }));\r\n\t}, []);\r\n\r\n\tuseEffect(() => { localStorage.setItem('monthIndex', monthIndex) }, [monthIndex]);\r\n\tuseEffect(() => { localStorage.setItem('currentModeIndex', currentModeIndex) }, [currentModeIndex]);\r\n\tuseEffect(() => { firstTimeLoadedAddress && dispatch(currentAddressChanged(firstAddress())) }, [firstAddress, firstTimeLoadedAddress]);\r\n\tuseEffect(() => { firstTimeLoadedContractor && dispatch(currentContractorChanged(firstContractor)) }, [firstContractor, firstTimeLoadedContractor]);\r\n\tuseEffect(() => { currentAddress && localStorage.setItem('currentAddress', JSON.stringify(currentAddress)) }, [currentAddress]);\r\n\tuseEffect(() => { currentContractor && localStorage.setItem('currentContractor', JSON.stringify(currentContractor)) }, [currentContractor]);\r\n\tuseEffect(() => { setListCardCount({ listCardCount: listIds() }); }, [monthIndex, currentAddress, currentContractor, listIds]);\r\n\r\n\tconst defaultMonth = months[monthIndex];\r\n\tconst _onSelectMonth = event => {\r\n\t\tconst foundIndex = months.indexOf(event.value);\r\n\t\tdispatch(monthIndexChanged({ monthIndex: foundIndex }));\r\n\t};\r\n\r\n\tconst prevMonth = () => (dispatch(monthIndexChanged({ monthIndex: monthIndex ? monthIndex - 1 : months.length - 1 })));\r\n\tconst nextMonth = () => (dispatch(monthIndexChanged({ monthIndex: monthIndex < months.length - 1 ? monthIndex + 1 : 0 })));\r\n\tconst hours = time => Math.floor(time);\r\n\tconst minutes = time => ((time - hours(time)) * 60).toPrecision(2) / 1;\r\n\tconst formattedTime = time => (`${hours(time)}h ${minutes(time)}min`);\r\n\r\n\tfunction idListPerMode(mode) {\r\n\t\tlet resultIds = [];\r\n\r\n\t\tswitch (mode) {\r\n\t\t\tcase 0:\r\n\t\t\t\tresultIds = addresses.map(card => card.projectId)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tresultIds = users.map(card => card.userId);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t}\r\n\t\treturn resultIds;\r\n\t}\r\n\r\n\tconst handlePrintAllCheckboxChange = event => {\r\n\t\tsetprintAllChecked({ printAllChecked: event.target.checked });\r\n\t}\r\n\r\n\tfunction ONLY_ON_PRINT_MODULES() {\r\n\t\tif (IS_PRINT_MODE)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tchecked={printAllChecked}\r\n\t\t\t\t\t\tonChange={handlePrintAllCheckboxChange}\r\n\t\t\t\t\t\tlabelText={'Select All'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\telse return null;\r\n\t}\r\n\r\n\tfunction HIDE_ON_PRINT_MODULES() {\r\n\t\tif (!IS_PRINT_MODE)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<TotalDisplayWrapper>\r\n\t\t\t\t\t\t<SelectUsers listCardCount={listCardCount} isAdmin={isAdmin} />\r\n\t\t\t\t\t\t<TotalDisplay>\r\n\t\t\t\t\t\t\tTotal: <TotalTime>{formattedTime(totalTime)}</TotalTime>\r\n\t\t\t\t\t\t</TotalDisplay>\r\n\t\t\t\t\t</TotalDisplayWrapper>\r\n\t\t\t\t\t<CardCounter>{`${cardCount} entries`}</CardCounter>\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\telse return null;\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ControlPanelContainer>\r\n\t\t\t\t<ControlPanelContent>\r\n\t\t\t\t\t{isAdmin ? <ModeSwitcher titles={['Project hours', 'Contractor Hours']} /> : null}\r\n\t\t\t\t\t<ControlPanelMonth>\r\n\t\t\t\t\t\t<BackwardCaret onClick={prevMonth} />\r\n\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\toptions={months}\r\n\t\t\t\t\t\t\tonChange={_onSelectMonth}\r\n\t\t\t\t\t\t\tvalue={defaultMonth}\r\n\t\t\t\t\t\t\tmenuClassName='monthMenuClass'\r\n\t\t\t\t\t\t\tclassName='monthMenuClass'\r\n\t\t\t\t\t\t\tplaceholderClassName='monthMenuClass'\r\n\t\t\t\t\t\t\tcontrolClassName='monthControlClass'\r\n\t\t\t\t\t\t\tarrowClosed={<span className=\"\" />}\r\n\t\t\t\t\t\t\tarrowOpen={<span className=\"\" />} />\r\n\t\t\t\t\t\t<ForwardCaret onClick={nextMonth} />\r\n\t\t\t\t\t</ControlPanelMonth>\r\n\t\t\t\t\t{ONLY_ON_PRINT_MODULES()}\r\n\t\t\t\t\t{HIDE_ON_PRINT_MODULES()}\r\n\t\t\t\t</ControlPanelContent>\r\n\t\t\t</ControlPanelContainer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>\r\n({\r\n\tprojects: getProjectArray(state),\r\n\tusers: getUsersArray(state),\r\n\ttimecards: getTimecardArray(state),\r\n\tmonthIndex: getMonthIndex(state),\r\n\tcurrentAddress: getcurrentAddress(state),\r\n\tcurrentContractor: getcurrentContractor(state),\r\n\tcurrentModeIndex: getcurrentModeIndex(state),\r\n\ttotalTime: gettotalTime(state),\r\n\tcardCount: getcardCount(state),\r\n\tlogin: getLoginData(state)\r\n\r\n})\r\n\r\n\r\n// mapStateToProps takes state of the store and returns the part you are interested in:\r\n// the properties of this object will end up as props of our componennt\r\nexport default connect(mapStateToProps)(ControlPanelSection);\r\n",["126","127"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\middleware\\api.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\timecards.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ContentSection\\index.js",["128","129","130","131","132"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\PrintContent\\index.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Checkbox\\CheckboxElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Checkbox\\index.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\reducers\\reducer.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\index.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\api.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\SelectUsers\\index.js",["133"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\SelectUsers\\SelectUsersElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\users.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\login.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\AddDataForm\\index.js",["134","135"],"import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { getcurrentModeIndex } from '../../Store/slices/currentModeIndex';\r\nimport { projectAdded } from '../../Store/slices/projects';\r\nimport { userAdded } from '../../Store/slices/users';\r\nimport Joi from 'joi-browser';\r\nimport { FormInput, FormWrapper, FormButton, FormContent, Form, FormH1, FormLabel, ScrollAnchor, ErrorMessage } from './AddDataFormElements';\r\nimport { companyConfig } from '../../services/companyConfig';\r\nimport * as actions from '../../Store/api';\r\nimport { getLoginData } from '../../Store/slices/login';\r\n\r\n\r\nconst AddDataForm = ({ currentModeIndex, login, dispatch }) => {\r\n\tconst dataType = ['Project', 'Contractor'][currentModeIndex];\r\n\tconst FIRST_MODE = currentModeIndex === 0;\r\n\tconst SECOND_MODE = currentModeIndex === 1;\r\n\r\n\tconst [{ nameInput }, setnameInput] = useState({ nameInput: '' });\r\n\tconst [{ emailInput }, setemailInput] = useState({ emailInput: '' });\r\n\tconst [{ addressInput }, setaddressInput] = useState({ addressInput: '' });\r\n\tconst [{ passwordInput }, setpasswordInput] = useState({ passwordInput: '' });\r\n\tconst [{ errors }, seterrors] = useState({ errors: {} });\r\n\r\n\tfunction handleNameChange(e) {\r\n\t\tsetnameInput({ nameInput: e.target.value })\r\n\t}\r\n\tfunction handleEmailChange(e) {\r\n\t\tsetemailInput({ emailInput: e.target.value })\r\n\t}\r\n\tfunction handleAddressChange(e) {\r\n\t\tsetaddressInput({ addressInput: e.target.value })\r\n\t}\r\n\tfunction handlePasswordChange(e) {\r\n\t\tsetpasswordInput({ passwordInput: e.target.value })\r\n\t}\r\n\tfunction emptyInputs() {\r\n\t\tsetnameInput({ nameInput: '' })\r\n\t\tsetemailInput({ emailInput: '' })\r\n\t\tsetaddressInput({ addressInput: '' })\r\n\t\tsetpasswordInput({ passwordInput: '' })\r\n\t}\r\n\tfunction doSubmit() {\r\n\t\tif (FIRST_MODE) dispatch(actions.apiCallBegan({\r\n\t\t\turl: \"/v1/project\",\r\n\t\t\tmethod: \"post\",\r\n\t\t\tdata: {\r\n\t\t\t\tcompanyId: companyConfig.companyId,\r\n\t\t\t\tname: nameInput,\r\n\t\t\t\taddress: addressInput,\r\n\t\t\t\tactive: true\r\n\t\t\t},\r\n\t\t\theaders: {\r\n\t\t\t\tsession: login.session\r\n\t\t\t},\r\n\t\t\tonSuccess: \"projects/projectReceived\"\r\n\t\t}));\r\n\t\tif (SECOND_MODE) dispatch(actions.apiCallBegan({\r\n\t\t\turl: \"/v1/user\",\r\n\t\t\tmethod: \"post\",\r\n\t\t\tdata: {\r\n\t\t\t\tcompanyId: companyConfig.companyId,\r\n\t\t\t\tfullName: nameInput,\r\n\t\t\t\temail: emailInput,\r\n\t\t\t\tpassword: passwordInput,\r\n\t\t\t\trole: \"employee\"\r\n\t\t\t},\r\n\t\t\theaders: {\r\n\t\t\t\tsession: login.session\r\n\t\t\t},\r\n\t\t\tonSuccess: \"users/userReceived\"\r\n\t\t}));\r\n\r\n\t\t// dispatch(actions.apiCallBegan);\r\n\r\n\t\temptyInputs();\r\n\t}\r\n\r\n\r\n\r\n\tconst firstModeSchema = {\r\n\t\tnameInput: Joi.string().regex(/^[a-zA-Z0-9ÆæØøÅåĀāĒēĪīŪūĻļĶķŠšČčŅņ\\-_ ]+$/).min(3).max(25).required().error(err => {\r\n\t\t\treturn { message: errorMessagePerType(err[0], 'Building Name') }\r\n\t\t}),\r\n\t\taddressInput: Joi.string().regex(/^[a-zA-Z0-9ÆæØøÅåĀāĒēĪīŪūĻļĶķŠšČčŅņ\\-_ ]+$/).min(3).max(25).required().error(err => {\r\n\t\t\treturn { message: errorMessagePerType(err[0], 'Address') }\r\n\t\t})\r\n\t}\r\n\tconst secondModeSchema = {\r\n\t\tnameInput: Joi.string().regex(/^[a-zA-Z0-9ÆæØøÅåĀāĒēĪīŪūĻļĶķŠšČčŅņ\\-_ ]+$/).min(3).max(25).required().error(err => {\r\n\t\t\treturn { message: errorMessagePerType(err[0], 'Name') }\r\n\t\t}),\r\n\t\temailInput: Joi.string().email({ tlds: { allow: false } }).required().error(err => {\r\n\t\t\treturn { message: errorMessagePerType(err[0], 'Email') }\r\n\t\t}),\r\n\t\tpasswordInput: Joi.string().regex(/^[a-zA-Z0-9ÆæØøÅåĀāĒēĪīŪūĻļĶķŠšČčŅņ\\-_ !]+$/).min(3).max(16).required().error(err => {\r\n\t\t\treturn { message: errorMessagePerType(err[0], 'Password') }\r\n\t\t})\r\n\t}\r\n\r\n\tfunction validate() {\r\n\t\tconst options = { abortEarly: false };\r\n\t\tconst firstModeFields = {\r\n\t\t\t...{ addressInput },\r\n\t\t\t...{ nameInput }\r\n\t\t};\r\n\t\tconst secondModeFields = {\r\n\t\t\t...{ nameInput },\r\n\t\t\t...{ emailInput },\r\n\t\t\t...{ passwordInput }\r\n\t\t};\r\n\r\n\t\tconst fieldSwitcher = () => {\r\n\t\t\tif (FIRST_MODE) return firstModeFields;\r\n\t\t\tif (SECOND_MODE) return secondModeFields;\r\n\t\t}\r\n\t\tconst schemaSwitcher = () => {\r\n\t\t\tif (FIRST_MODE) return firstModeSchema;\r\n\t\t\tif (SECOND_MODE) return secondModeSchema;\r\n\t\t}\r\n\r\n\t\tconst { error } = Joi.validate(fieldSwitcher(), schemaSwitcher(), options);\r\n\t\tif (!error) return null;\r\n\r\n\t\tconst errors = {};\r\n\r\n\t\tfor (let item of error.details)\r\n\t\t\terrors[item.path[0]] = item.message;\r\n\t\treturn errors;\r\n\t}\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault() // stops default reloading behaviour\r\n\r\n\t\tconst allErrors = validate();\r\n\t\tseterrors({ errors: allErrors || {} });\r\n\t\tif (allErrors) return;\r\n\r\n\t\tdoSubmit();\r\n\t}\r\n\r\n\tfunction ONLY_FIRSTMODE_MODULES() {\r\n\t\tif (FIRST_MODE)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<FormLabel htmlFor='for'>Address</FormLabel>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tonClick={() => scrollDownTo(\".scrollHere\")}\r\n\t\t\t\t\t\tonChange={handleAddressChange}\r\n\t\t\t\t\t\tvalue={addressInput}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\thasErrors={errors['addressInput']}\r\n\t\t\t\t\t\trequired />\r\n\t\t\t\t\t{errors['addressInput'] && <ErrorMessage>{errors['addressInput']}</ErrorMessage>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n\tfunction ONLY_SECONDMODE_MODULES() {\r\n\t\tif (SECOND_MODE)\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<FormLabel htmlFor='for'>Email</FormLabel>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tonClick={() => scrollDownTo(\".scrollHere\")}\r\n\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\tvalue={emailInput}\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\thasErrors={errors['emailInput']}\r\n\t\t\t\t\t\trequired />\r\n\t\t\t\t\t{errors['emailInput'] && <ErrorMessage>{errors['emailInput']}</ErrorMessage>}\r\n\t\t\t\t\t<FormLabel htmlFor='for'>Password</FormLabel>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\tonClick={() => scrollDownTo(\".scrollHere\")}\r\n\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\tvalue={passwordInput}\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\thasErrors={errors['passwordInput']}\r\n\t\t\t\t\t\trequired />\r\n\t\t\t\t\t{errors['passwordInput'] && <ErrorMessage>{errors['passwordInput']}</ErrorMessage>}\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<FormWrapper>\r\n\t\t\t\t<FormContent >\r\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<FormH1>Add New {dataType}</FormH1>\r\n\t\t\t\t\t\t{ONLY_FIRSTMODE_MODULES()}\r\n\t\t\t\t\t\t<FormLabel htmlFor='for'>{FIRST_MODE && 'Building'} Name</FormLabel>\r\n\t\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\t\tonChange={handleNameChange}\r\n\t\t\t\t\t\t\tvalue={nameInput}\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\thasErrors={errors['nameInput']}\r\n\t\t\t\t\t\t\trequired />\r\n\t\t\t\t\t\t{errors['nameInput'] && <ErrorMessage>{errors['nameInput']}</ErrorMessage>}\r\n\t\t\t\t\t\t{ONLY_SECONDMODE_MODULES()}\r\n\t\t\t\t\t\t<FormButton>Add</FormButton>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</FormContent>\r\n\t\t\t</FormWrapper>\r\n\t\t\t<ScrollAnchor className={'scrollHere'} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n({\r\n\tcurrentModeIndex: getcurrentModeIndex(state),\r\n\tlogin: getLoginData(state)\r\n})\r\n\r\n\r\n// mapStateToProps takes state of the store and returns the part you are interested in:\r\n// the properties of this object will end up as props of our componennt\r\nexport default connect(mapStateToProps)(AddDataForm);\r\n\r\n\r\nexport function scrollDownTo(cssQuerry) {\r\n\tsetTimeout(() => {\r\n\t\tdocument.querySelector(cssQuerry) && document.querySelector(cssQuerry).scrollIntoView(false);\r\n\t}, 200);\r\n}\r\nexport function errorMessagePerType(error, fieldName) {\r\n\tlet result = '';\r\n\r\n\tswitch (error.type) {\r\n\t\tcase \"any.empty\":\r\n\t\t\tresult = `${fieldName} should not be empty!`;\r\n\t\t\tbreak;\r\n\t\tcase \"string.min\":\r\n\t\t\tresult = `${fieldName} should have at least ${error.context.limit} characters!`;\r\n\t\t\tbreak;\r\n\t\tcase \"string.max\":\r\n\t\t\tresult = `${fieldName} should have at most ${error.context.limit} characters!`;\r\n\t\t\tbreak;\r\n\t\tcase \"string.regex.base\":\r\n\t\t\tresult = `${fieldName} contains wrong symbols!`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\treturn result;\r\n};","D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\recordOverview.js",["136"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\addEntry.js",["137","138","139","140","141","142","143","144","145","146","147","148"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Sidebar\\index.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\login.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\Modal\\ModalElements.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\AddEntryForm\\index.js",["149","150","151"],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\slices\\currentAddress.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\pages\\addRemove.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\Store\\configureStore.js",[],"D:\\wamp64\\www\\sidnabyg\\jobbler\\app\\src\\components\\ControlPanelSection\\ControlPanelElements.js",[],{"ruleId":"152","severity":1,"message":"153","line":3,"column":60,"nodeType":"154","messageId":"155","endLine":3,"endColumn":71},{"ruleId":"152","severity":1,"message":"156","line":7,"column":10,"nodeType":"154","messageId":"155","endLine":7,"endColumn":22},{"ruleId":"152","severity":1,"message":"157","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":19},{"ruleId":"152","severity":1,"message":"158","line":9,"column":28,"nodeType":"154","messageId":"155","endLine":9,"endColumn":41},{"ruleId":"159","severity":1,"message":"160","line":31,"column":5,"nodeType":"161","endLine":31,"endColumn":7,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":36,"column":5,"nodeType":"161","endLine":36,"endColumn":12,"suggestions":"164"},{"ruleId":"159","severity":1,"message":"165","line":68,"column":5,"nodeType":"161","endLine":68,"endColumn":28,"suggestions":"166"},{"ruleId":"159","severity":1,"message":"167","line":100,"column":5,"nodeType":"161","endLine":100,"endColumn":40,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"169","line":20,"column":24,"nodeType":"154","messageId":"155","endLine":20,"endColumn":32},{"ruleId":"159","severity":1,"message":"170","line":64,"column":7,"nodeType":"161","endLine":64,"endColumn":48,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"172","line":73,"column":5,"nodeType":"161","endLine":73,"endColumn":7,"suggestions":"173"},{"ruleId":"159","severity":1,"message":"174","line":77,"column":97,"nodeType":"161","endLine":77,"endColumn":135,"suggestions":"175"},{"ruleId":"159","severity":1,"message":"174","line":78,"column":104,"nodeType":"161","endLine":78,"endColumn":148,"suggestions":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"159","severity":1,"message":"174","line":40,"column":5,"nodeType":"161","endLine":40,"endColumn":16,"suggestions":"181"},{"ruleId":"159","severity":1,"message":"182","line":45,"column":5,"nodeType":"161","endLine":45,"endColumn":80,"suggestions":"183"},{"ruleId":"152","severity":1,"message":"184","line":51,"column":9,"nodeType":"154","messageId":"155","endLine":51,"endColumn":20},{"ruleId":"152","severity":1,"message":"185","line":66,"column":9,"nodeType":"154","messageId":"155","endLine":66,"endColumn":23},{"ruleId":"186","severity":1,"message":"187","line":154,"column":46,"nodeType":"188","messageId":"189","endLine":154,"endColumn":48},{"ruleId":"159","severity":1,"message":"190","line":43,"column":5,"nodeType":"161","endLine":43,"endColumn":7,"suggestions":"191"},{"ruleId":"152","severity":1,"message":"156","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":22},{"ruleId":"152","severity":1,"message":"157","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":19},{"ruleId":"159","severity":1,"message":"165","line":26,"column":5,"nodeType":"161","endLine":26,"endColumn":14,"suggestions":"192"},{"ruleId":"152","severity":1,"message":"193","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":22},{"ruleId":"152","severity":1,"message":"194","line":2,"column":24,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"195","line":6,"column":8,"nodeType":"154","messageId":"155","endLine":6,"endColumn":20},{"ruleId":"152","severity":1,"message":"196","line":8,"column":25,"nodeType":"154","messageId":"155","endLine":8,"endColumn":36},{"ruleId":"152","severity":1,"message":"197","line":9,"column":27,"nodeType":"154","messageId":"155","endLine":9,"endColumn":41},{"ruleId":"152","severity":1,"message":"198","line":10,"column":10,"nodeType":"154","messageId":"155","endLine":10,"endColumn":31},{"ruleId":"152","severity":1,"message":"199","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":34},{"ruleId":"152","severity":1,"message":"200","line":13,"column":8,"nodeType":"154","messageId":"155","endLine":13,"endColumn":13},{"ruleId":"152","severity":1,"message":"201","line":14,"column":28,"nodeType":"154","messageId":"155","endLine":14,"endColumn":50},{"ruleId":"152","severity":1,"message":"202","line":14,"column":52,"nodeType":"154","messageId":"155","endLine":14,"endColumn":77},{"ruleId":"152","severity":1,"message":"203","line":15,"column":13,"nodeType":"154","messageId":"155","endLine":15,"endColumn":20},{"ruleId":"152","severity":1,"message":"204","line":16,"column":10,"nodeType":"154","messageId":"155","endLine":16,"endColumn":23},{"ruleId":"152","severity":1,"message":"205","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":29},{"ruleId":"152","severity":1,"message":"204","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":23},{"ruleId":"159","severity":1,"message":"206","line":46,"column":5,"nodeType":"161","endLine":46,"endColumn":16,"suggestions":"207"},"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'projectAdded' is defined but never used.","'userAdded' is defined but never used.","'timecardAdded' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'storedLogin', and 'storedLoginEmpty'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["208"],"React Hook useEffect has a missing dependency: 'storedLoginEmpty'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'dispatch' and 'login.session'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["210"],"React Hook useEffect has missing dependencies: 'dispatch', 'isAdmin', and 'login.session'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"'loggedIn' is defined but never used.","React Hook useCallback has missing dependencies: 'idListPerMode', 'isAdmin', and 'loggedInUserId'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'dispatch' and 'monthNow'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["213"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["214"],["215"],"no-native-reassign",["216"],"no-negated-in-lhs",["217"],["218"],"React Hook useEffect has missing dependencies: 'calcTime' and 'timeWorked'. Either include them or remove the dependency array.",["219"],"'projectTime' is assigned a value but never used.","'contractorTime' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'addresses' and 'dispatch'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],["221"],"'ActionButton' is defined but never used.","'Container' is defined but never used.","'ModeSwitcher' is defined but never used.","'userRemoved' is defined but never used.","'projectRemoved' is defined but never used.","'currentAddressChanged' is defined but never used.","'currentContractorChanged' is defined but never used.","'Modal' is defined but never used.","'timecardsOfUserRemoved' is defined but never used.","'timecardsOfProjectRemoved' is defined but never used.","'actions' is defined but never used.","'companyConfig' is defined but never used.","'getcurrentModeIndex' is defined but never used.","React Hook useEffect has missing dependencies: 'errors', 'history', and 'isLoading'. Either include them or remove the dependency array.",["222"],{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [dispatch, storedLogin, storedLoginEmpty]",{"range":"249","text":"250"},"Update the dependencies array to be: [login, storedLoginEmpty]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, login.isAuthenticated, login.session]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, isAdmin, login.isAuthenticated, login.session, monthIndex]",{"range":"255","text":"256"},"Update the dependencies array to be: [currentModeIndex, idListPerMode, isAdmin, loggedInUserId, monthIndex, timecards]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, monthNow]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, firstAddress, firstTimeLoadedAddress]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, firstContractor, firstTimeLoadedContractor]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, savedTime]",{"range":"265","text":"266"},"Update the dependencies array to be: [projectId, currentModeIndex, selectedContractor, selectedMonth, timeCards, calcTime, timeWorked]",{"range":"267","text":"268"},"Update the dependencies array to be: [addresses, dispatch]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch, history, login.session]",{"range":"271","text":"272"},"Update the dependencies array to be: [errors, history, isLoading, timecards]",{"range":"273","text":"274"},[1433,1435],"[dispatch, storedLogin, storedLoginEmpty]",[1572,1579],"[login, storedLoginEmpty]",[2420,2443],"[dispatch, login.isAuthenticated, login.session]",[3269,3304],"[dispatch, isAdmin, login.isAuthenticated, login.session, monthIndex]",[2707,2748],"[currentModeIndex, idListPerMode, isAdmin, loggedInUserId, monthIndex, timecards]",[3337,3339],"[dispatch, monthNow]",[3629,3667],"[dispatch, firstAddress, firstTimeLoadedAddress]",[3774,3818],"[dispatch, firstContractor, firstTimeLoadedContractor]",[1489,1500],"[dispatch, savedTime]",[1590,1665],"[projectId, currentModeIndex, selectedContractor, selectedMonth, timeCards, calcTime, timeWorked]",[1971,1973],"[addresses, dispatch]",[913,922],"[dispatch, history, login.session]",[2228,2239],"[errors, history, isLoading, timecards]"]